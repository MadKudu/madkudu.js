version: 2

references:
  defaults: &defaults
    working_directory: ~/repo
    docker:
      - image: madkudu/node:10.16.3
    parallelism: 1
    environment:
      CC_TEST_REPORTER_ID: cc4cc3b429117620d21099a292136c912927b6d1feab569c8aa885e1c317a54c

jobs:
  build_job:
    <<: *defaults

    steps:

    # Machine Setup
    - checkout

    # Restore the dependency cache
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}

    - run:
        name: set up Chrome
        command: |
          curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome.deb
          sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
          rm google-chrome.deb

    - run:
        name: Set up path
        command: |
          if [ -z "${NODE_ENV:-}" ]; then export NODE_ENV=test; fi
          export PATH="~/MadKudu/madkudu.js/node_modules/.bin:$PATH"

    - run: npm install

    # Save dependency cache
    - save_cache:
        key: v1-dependencies-{{ checksum "package.json" }}
        paths:
          - ./node_modules

    # Tests

    # This is from Code Climate (see https://docs.codeclimate.com/docs/circle-ci-test-coverage-example#section-circleci-20)
    - run:
        name: Setup test reporter
        command: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          mkdir coverage

    - run: npm test

    - run:
        name: Upload coverage
        command: |
          find ./dist/coverage/unit/Chrome*/lcov.info -exec cp {} ./coverage/ \;
          ./cc-test-reporter after-build --coverage-input-type lcov --exit-code $EXIT_CODE --debug

    - persist_to_workspace:
        root: ~/repo
        paths: .

  publish_job:
    <<: *defaults

    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - deploy:
          command: npm publish

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_job:
          context: dev
      - publish_job:
          context: prod
          requires:
            - build_job
          filters:
            branches:
              only: master
